//database.c


#include<stdlib.h>
#include<stdio.h>
#include<sqlite3.h>
#include"../address.h"
#include<string.h>
/*
 １．创建数据库文件
 ２．创建保存联系人的表
 ３．数据库名称改为address 
*/ 
void InitDataBase()
{
	sqlite3 *ppdb;//数据库句柄

	int ret = sqlite3_open("address.db",&ppdb);
	if( ret != SQLITE_OK)
	{
		printf("sqlite3_open:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}

	char sql[128] = {0};	//保存数据库语句
	sprintf(sql,"create table if not exists address (name text, tel text);");
	ret = sqlite3_exec(ppdb,sql,NULL,NULL,NULL);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_exec1:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}
	sqlite3_close(ppdb);	//关闭数据库
}

void add_info(Chat *c)
{
	sqlite3 *ppdb;

	int ret = sqlite3_open("address.db",&ppdb);
	if(ret!= SQLITE_OK)
	{
		printf("sqlite3_open:%s\n",sqlite3_errmsg(ppdb));
	}

	char sql[128] = {0};
	sprintf(sql,"insert into address values ('%s','%s');",c->name, c->tel);
	ret = sqlite3_exec(ppdb,sql,NULL,NULL,NULL);
	if(ret!=SQLITE_OK)
	{
		printf("sqlite3_exec:%s\n",sqlite3_errmsg(ppdb));
	}
	
	sqlite3_close(ppdb);
}
//查询后回调函数，持续发送
int sendinfo(void *para,int columnCount, char **columnValue,char **columnName)
{
	int fd = *(int *)para;
	Chat c;
	strcpy(c.name,columnValue[0]);
	strcpy(c.tel,columnValue[1]);

	int ret = send(fd, &c, sizeof(c),0);
	if(-1 == ret)
	{
		perror("send");
	}
	return 0;
}

//查询函数
void search_info(Chat *c,int fd)
{
	sqlite3 *ppdb;

	int ret = sqlite3_open("address.db",&ppdb);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_open:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}
	
	char sql[128] = {0};
	sprintf(sql,"select * from address where name = '%s';",c->name);

	ret = sqlite3_exec(ppdb,sql,sendinfo,&fd,NULL);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_exec:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}
	Chat d;
	strcpy(d.name,"bye");
	strcpy(d.tel,"bye");

	ret = send(fd,&d,sizeof(d),0);
	if(-1 == ret)
	{
		perror("send");
	}
}
//删除函数
void delete_info(Chat *c,int fd)
{
	sqlite3 *ppdb;

	int ret = sqlite3_open("address.db",&ppdb);
	if(ret!= SQLITE_OK)
	{
		printf("sqlite3_open:%s\n",sqlite3_errmsg(ppdb));
	}

	char sql[128] = {0};
	sprintf(sql,"delete from address where name = '%s';",c->name);
	ret = sqlite3_exec(ppdb,sql,NULL,NULL,NULL);
	if(ret!=SQLITE_OK)
	{
		printf("sqlite3_exec:%s\n",sqlite3_errmsg(ppdb));
	}
	
	sqlite3_close(ppdb);
}
//更新函数
void update_info(Chat *c,int fd)
{
	//更新之前查询
	
	sqlite3 *ppdb;

	int ret = sqlite3_open("address.db",&ppdb);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_open:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}
	
	char sql[128] = {0};
	sprintf(sql,"select * from address where name = '%s';",c->name);

	ret = sqlite3_exec(ppdb,sql,sendinfo,&fd,NULL);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_exec:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}
	Chat d;
	strcpy(d.name,"bye");
	strcpy(d.tel,"bye");

	ret = send(fd,&d,sizeof(d),0);
	if(-1 == ret)
	{
		perror("send");
	}

	//printf("%s",c->name);
	strcpy(d.name,c->name);
	ret = recv(fd, c, sizeof(Chat), 0);
	//printf("%s",d.name);
        printf("recv success! = %d\n",ret);
printf("%s\n %s\n",c->name,c->tel);
	sprintf(sql,"UPDATE address set name = '%s' ,tel= '%s' where name = '%s';",c->name,c->tel,d.name);
        printf("sql = %s\n",sql);
	ret = sqlite3_exec(ppdb,sql,NULL,NULL,NULL);
	if(ret!=SQLITE_OK)
	{
		printf("sqlite3_exec:%s\n",sqlite3_errmsg(ppdb));
	}
	
	sqlite3_close(ppdb);
}
//通讯录全显示函数
void show_info(int fd)
{
	sqlite3 *ppdb;

	int ret = sqlite3_open("address.db",&ppdb);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_open:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}

	char sql[128] = "select * from address;";

	ret = sqlite3_exec(ppdb,sql,sendinfo,&fd,NULL);
	if(ret != SQLITE_OK)
	{
		printf("sqlite3_exec:%s\n",sqlite3_errmsg(ppdb));
		exit(1);
	}

	Chat c;
	strcpy(c.name,"bye");
	strcpy(c.tel,"bye");

	ret = send(fd,&c,sizeof(c),0);
	if(-1 == ret)
	{
		perror("send");
	}
}
